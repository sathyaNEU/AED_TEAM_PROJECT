/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.login.Faculty;

import java.awt.CardLayout;
import java.awt.Panel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.AdminPkg.Faculty;
import model.AdminPkg.StudentDirectory;
import model.CoursePkg.CourseCatalog;
import model.DateAndTime.MeetTimeSchedule;

/**
 *
 * @author Sathya
 */
public class ManageScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageScheduleJPanel
     */
    JPanel userProcessContainer;
    StudentDirectory studentDir;
    Faculty faculty;
    
    public ManageScheduleJPanel(JPanel userProcessContainer, StudentDirectory studentDir,Faculty faculty) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.faculty = faculty;
        this.studentDir = studentDir;
        welcomeLbl.setText(faculty.getFull_name());
        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        welcomeLbl = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        addAvailBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        rescheduleBtn = new javax.swing.JButton();

        jLabel1.setText("Welcome");

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Day", "Timing", "Status", "Student"
            }
        ));
        jScrollPane1.setViewportView(scheduleTable);

        addAvailBtn.setText("Add Availability");
        addAvailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAvailBtnActionPerformed(evt);
            }
        });

        refreshBtn.setText("REFRESH");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        rescheduleBtn.setText("Reschedule or Remove Availability");
        rescheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rescheduleBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(welcomeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(refreshBtn)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(addAvailBtn)
                .addGap(54, 54, 54)
                .addComponent(rescheduleBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(welcomeLbl))
                .addGap(89, 89, 89)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refreshBtn)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAvailBtn)
                    .addComponent(rescheduleBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(63, 63, 63))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ((CardLayout)userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void rescheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rescheduleBtnActionPerformed
        // TODO add your handling code here:
       int index = scheduleTable.getSelectedRow();
       if(index==-1){
           JOptionPane.showMessageDialog(this, "Row not selected", "ERROR", JOptionPane.ERROR_MESSAGE);
       }
       else{
           DefaultTableModel dtm = (DefaultTableModel)scheduleTable.getModel();
           RescheduleJPanel reschedulePanel = new RescheduleJPanel(userProcessContainer, faculty, (MeetTimeSchedule)dtm.getValueAt(index, 0));
           userProcessContainer.add(reschedulePanel);
           ((CardLayout)userProcessContainer.getLayout()).next(userProcessContainer);

       }
       

    }//GEN-LAST:event_rescheduleBtnActionPerformed

    private void addAvailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAvailBtnActionPerformed
        // TODO add your handling code here:
        AddAvailJPanel addAvailJPanel = new AddAvailJPanel(this.userProcessContainer, this.faculty);
        userProcessContainer.add("addAvailJPanel",addAvailJPanel);
        ((CardLayout)userProcessContainer.getLayout()).next(userProcessContainer);
        
    }//GEN-LAST:event_addAvailBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAvailBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton rescheduleBtn;
    private javax.swing.JTable scheduleTable;
    private javax.swing.JLabel welcomeLbl;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel)scheduleTable.getModel();
        dtm.setRowCount(0);
        for(MeetTimeSchedule meetTimeSchedule : this.faculty.getMeetTimeScheduleList()){
            Object[] obj = new Object[5];
            obj[0] = meetTimeSchedule;
            obj[1] = meetTimeSchedule.getDay();
            obj[2] = meetTimeSchedule.getTiming();
            if(meetTimeSchedule.isActive())
                obj[3] = "Active" ;
            else
                obj[3] = "InActive" ;
            if(meetTimeSchedule.getStudent()==null)
                obj[4] = "Not Assigned";
            else
                obj[4] = meetTimeSchedule.getStudent().getFull_name();
            dtm.addRow(obj);
        }
    }
}
